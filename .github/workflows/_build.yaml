name: Build Image

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        description: 'Git ref to checkout'
        required: true
        type: string
      tag:
        description: 'Docker image tag'
        required: true
        type: string
      push:
        description: Whether to push to Dockerhub
        required: false
        type: boolean
        default: false
    secrets:
      DOCKER_ACCESS_TOKEN:
        required: false

jobs:
  build:
    name: Build${{ inputs.push && ', Check, and Push' || 'and Check' }} Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Build Image
        run: |
          IS_PRERELEASE="$([[${{ inputs.tag }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+\-[\0-9]+$ ]] && echo true || echo false)"
          mutable_tag="$([ $IS_PRERELEASE == true ] && echo beta || echo latest)"

          docker build --build-arg APP_VERSION="${{ inputs.tag }}" -t bnsfly/audiobook-catalog:latest -f Dockerfile.prod .
          docker tag "bnsfly/audiobook-catalog:$mutable_tag" bnsfly/audiobook-catalog:${{ inputs.tag }}

      - name: Check that image runs
        run: |
          container_id="$(docker run --detach --volume "$(pwd)"/.audiobooks:/audiobooks  --publish 3000:3000 --rm bnsfly/audiobook-catalog:${{ inputs.tag }})"
          docker logs -f $container_id &
          trap "docker stop $container_id" EXIT

          for i in {1..10}; do
            echo "Checking application..."
            if curl --fail-with-body http://localhost:3000; then
              echo "Application started successfully"
              exit 0
            fi
            sleep 1
          done

          echo "Application failed to start"
          exit 1

      - name: Log into Dockerhub
        id: docker-login
        if: ${{ inputs.push }}
        env:
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u bnsfly --password-stdin

      - name: Push image to Dockerhub
        if: ${{ inputs.push && steps.docker-login.outcome == 'success' }}
        run: |
          docker image ls bnsfly/audiobook-catalog --format json \
            | jq -r '.Tag' \
            | xargs -I {} docker push bnsfly/audiobook-catalog:{}
